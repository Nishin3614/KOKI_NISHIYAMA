// ------------------------------------------------------------------------------------------
// 統計処理 [statistics.cpp]
// Author : Koki Nishiyama
// ------------------------------------------------------------------------------------------
#include "statistics.h"	// 統計ヘッダー
#include "statipoint.h"
#include "statisticsUI.h"
#include "input.h"
#include "joypad.h"
#include "fade.h"
#include "sound.h"
#include "element.h"

// ------------------------------------------------------------------------------------------
// マクロ定義
// ------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------
// プロトタイプ宣言
// ------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------
// グローバル変数宣言
// ------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------
// 初期化処理
// ------------------------------------------------------------------------------------------
void InitStatistics(void)
{
	// ゲーム要素の初期化処理
	InitElement();

	// 統計用UIの初期化処理
	InitStatisticsUI();

	// 統計の初期化処理
	InitStatipoint();
}

// ------------------------------------------------------------------------------------------
// 終了処理
// ------------------------------------------------------------------------------------------
void UninitStatistics(void)
{
	// ゲーム要素の終了処理
	UninitElement();

	// 統計用UIの終了処理
	UninitStatisticsUI();

	// 統計の終了処理
	UninitStatipoint();
}

// ------------------------------------------------------------------------------------------
// 更新処理
// ------------------------------------------------------------------------------------------
void UpdateStatistics(void)
{
	// ゲーム要素の更新処理
	UpdateElement();

	// 統計用UIの更新処理
	UpdateStatisticsUI();

	// 統計の更新処理
	UpdateStatipoint();

	// エンター押したとき
	if (GetKeyboardTrigger(DIK_RETURN) && GetFade() == FADE_NONE ||
		GetJoyboardTrigger(0, JOYPADKEY_B) && GetFade() == FADE_NONE ||
		GetKeyboardTrigger(DIK_J) && GetFade() == FADE_NONE)
	{
		// エンター音
		PlaySound(SOUND_LABEL_SE_ENTER);

		// ランキングへ
		SetFade(MODE_RANK);
	}
}

// ------------------------------------------------------------------------------------------
// 描画処理
// ------------------------------------------------------------------------------------------
void DrawStatistics(void)
{
	// ゲーム要素の描画処理
	DrawElement();

	// 統計用UIの描画処理
	DrawStatisticsUI();

	// 統計の描画処理
	DrawStatipoint();
}
