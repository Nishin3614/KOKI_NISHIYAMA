// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// メッシュウォール処理の説明[meshwall.h]
// Author : Koki Nishiyama
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#ifndef _MESHWALL_H_
#define _MESHWALL_H_	 // ファイル名を基準を決める

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// インクルードファイル
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "scene.h"

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// マクロ定義
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// 前方宣言
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// クラス
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class CMeshwall : public CScene
{
public:
	/* 関数 */
	CMeshwall();
	~CMeshwall();
	void Init(void);
	void Uninit(void);
	void Update(void);
	void Draw(void);
#ifdef _DEBUG
	void Debug(void);
#endif // _DEBUG

	static HRESULT Load(void);
	static void UnLoad(void);
	// 作成
	static CMeshwall * Create(		
		D3DXVECTOR3 const &pos,		// 位置
		D3DXVECTOR3 const &size,	// サイズ
		D3DXVECTOR3 const &rot,		// 回転
		int const &nWidth,			// 横ブロック
		int const &nDepth,			// 縦ブロック
		int const &nType			// タイプ
	);
	// 読みこんだ情報の生成
	static HRESULT LoadCreate(void);
	// 高さ取得
	float GetHeight(D3DXVECTOR3 pos);	

protected:

private:
	/* 関数 */
	static HRESULT LoadText(void);	// テキストデータの読み込み
	/* 変数 */
	static LPDIRECT3DTEXTURE9 m_pTex;
	static vector<ARRANGEMENTMESH>	m_pArrangemesh;		// 配置物情報
	LPDIRECT3DVERTEXBUFFER9 m_pVtxBuff;					// 頂点バッファへのポインタ
	LPDIRECT3DINDEXBUFFER9	m_pIndex;					// インデックスバッファのポインタ
	D3DXVECTOR3 m_OriginBlock;							// 初期配置
	D3DXMATRIX  m_mtxWorld;								// ワールドマトリックス
	D3DXVECTOR3 m_pos;									// 位置
	D3DXVECTOR3 m_size;									// サイズ
	D3DXVECTOR3 m_rot;									// 角度
	int	m_nNumberVertex;								// 総頂点数
	int m_nNumIndex;									// 総インデックス
	int m_nNumPolygon;									// 総ポリゴン
	int m_nBlock_Depth;									// 縦ブロック数
	int m_nBlock_Width;									// 横ブロック数
};

#endif